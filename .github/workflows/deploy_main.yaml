name: Build and Deploy
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t alex85doronin/to_do_list:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      - name: docker push
        run: docker push alex85doronin/to_do_list:$GITHUB_REF_NAME-$GITHUB_RUN_ID


  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat docker_ci_config.py | envsubst > deploy/docker_config.py
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "deploy/docker-compose.yaml,deploy/docker_config.py"
          target: "to_do_list_app"
          strip_components: 1
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd to_do_list_app
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker-compose up -d